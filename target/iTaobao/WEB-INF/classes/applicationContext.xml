<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--开启注解的扫描，com.w.controller.service-->
    <context:component-scan base-package="com.w" >
        <!--配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

<!--    Spring整合MyBatis框架-->
    <!--    druid-->
    <!-- 读取jdbc.properties配置文件 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:db.properties</value>
        </property> </bean>

        <!--配置连接池-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">

            <property name="username" value="${username}"></property>
            <property name="password" value="${password}"></property>
            <property name="driverClassName" value="${driver}"></property>
            <property name="url" value="${url}"></property>

            <!-- 初始化连接大小 -->
            <property name="initialSize" value="${initialSize}"></property>
            <!-- 连接池最大使用连接数量 -->
            <property name="maxActive" value="${maxActive}"></property>
            <!-- 连接池最小空闲 -->
            <property name="minIdle" value="${initialSize}" />
            <!-- 获取连接最大等待时间 -->
            <property name="maxWait" value="${maxWait}" />

            <property name="validationQuery" value="${validationQuery}" />

            <property name="testOnBorrow" value="${testOnBorrow}" />
            <property name="testOnReturn" value="${testOnReturn}" />
            <property name="testWhileIdle" value="${testWhileIdle}" />

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />

            <!-- 打开removeAbandoned功能 -->
            <property name="removeAbandoned" value="${removeAbandoned}" />
            <!-- 1800秒，也就是30分钟 -->
            <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
            <!-- 关闭abanded连接时输出错误日志 -->
            <property name="logAbandoned" value="${logAbandoned}" />
            <!-- 监控数据库 -->
            <property name="filters" value="stat" />
<!--            <property name="filters" value="wall" />-->
        </bean>

    <!--配置SqlSessionFactory工厂-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
        </bean>
    <!--    com.w.dao-->
        <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.w.dao"/>
        </bean>

<!--    事务-->
    <!--配置事务管理器-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource" />
        </bean>
    <!--配置事务通知-->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="find*" read-only="true"/>
                <tx:method name="*" isolation="DEFAULT"/>
            </tx:attributes>
        </tx:advice>

<!--    aop增强-->
        <aop:config>
            <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.w.service.impl.*ServiceImpl.*(..))"/>
        </aop:config>

</beans>